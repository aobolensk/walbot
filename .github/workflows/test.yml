name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: >-
    ${{ github.ref != 'refs/heads/master' &&
        github.event_name != 'merge_group' &&
        !startsWith(github.ref, 'refs/heads/gh-readonly-queue') }}

jobs:
  tests:
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        os-image:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os-image }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-extra.txt
            tests/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-extra.txt
          python -m pip install -r tests/requirements.txt
      - name: Run tests
        run: python walbot.py test
  poetry-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: pip
          cache-dependency-path: |
            requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install .
          python -m pip install -r tests/requirements.txt
      - name: Run tests
        run: python walbot.py test
  light-docker-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build Docker image
        run: docker build -f docker/light.Dockerfile -t walbot .
      - name: Run tests in Docker
        run: docker run -i walbot /bin/bash -c "pip install -r tests/requirements.txt && python walbot.py test"
  default-docker-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build Docker image
        run: docker build -f docker/default.Dockerfile -t walbot .
      - name: Run tests in Docker
        run: docker run -i walbot /bin/bash -c "pip install -r tests/requirements.txt && python walbot.py test"
