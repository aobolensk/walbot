name: Lint

on: [push, pull_request]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install linter
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
    - name: Run linter
      run: python -m flake8 --show-source
  formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install linter
      run: |
        python -m pip install --upgrade pip
        python -m pip install autopep8
    - name: Run formatting tool
      run: find . -type f -name '*.py' -exec autopep8 -a -i {} \;
    - name: Compare formatted version with unformatted
      run: git diff --exit-code
  docs_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Update docs
      run: python walbot.py docs
    - name: Compare docs
      run: git diff --exit-code docs/DiscordCommands.md docs/TelegramCommands.md
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Install pylint
      run: python -m pip install pylint
    - name: pylint version
      run: pylint --version
    - name: Run pylint
      run: pylint src/ tools/ tests/ walbot.py --exit-zero
  isort:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Install isort
      run: python -m pip install isort
    - name: isort version
      run: isort --version
    - name: Run isort
      run: isort .
    - name: Compare formatted version with unformatted
      run: git diff --exit-code
    - name: List files with error (open this section to see the list of files that failed this check)
      run: git diff | grep "diff --git"; exit 1
      if: failure()
